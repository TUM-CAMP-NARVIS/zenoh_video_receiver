// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file Hololens2Manager.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _FAST_DDS_GENERATED_PCPD_MSGS_RPC_HOLOLENS2MANAGER_H_
#define _FAST_DDS_GENERATED_PCPD_MSGS_RPC_HOLOLENS2MANAGER_H_

#include "pcpd_msgs/rpc/Types.h"
#include "pcpd_msgs/msg/Types.h"
#include "std_msgs/msg/Header.h"

#include <fastrtps/utils/fixed_size_string.hpp>

#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(Hololens2Manager_SOURCE)
#define Hololens2Manager_DllAPI __declspec( dllexport )
#else
#define Hololens2Manager_DllAPI __declspec( dllimport )
#endif // Hololens2Manager_SOURCE
#else
#define Hololens2Manager_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define Hololens2Manager_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
} // namespace fastcdr
} // namespace eprosima


namespace pcpd_msgs {
    namespace rpc {
        /*!
         * @brief This class represents the enumeration Hololens2LogLevel defined by the user in the IDL file.
         * @ingroup HOLOLENS2MANAGER
         */
        enum Hololens2LogLevel : uint32_t
        {
            HL2_LOG_ERROR,
            HL2_LOG_WARNING,
            HL2_LOG_INFO,
            HL2_LOG_DEBUG,
            HL2_LOG_TRACE
        };
        /*!
         * @brief This class represents the structure Hololens2LogItem defined by the user in the IDL file.
         * @ingroup HOLOLENS2MANAGER
         */
        class Hololens2LogItem
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport Hololens2LogItem();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~Hololens2LogItem();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object pcpd_msgs::rpc::Hololens2LogItem that will be copied.
             */
            eProsima_user_DllExport Hololens2LogItem(
                    const Hololens2LogItem& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object pcpd_msgs::rpc::Hololens2LogItem that will be copied.
             */
            eProsima_user_DllExport Hololens2LogItem(
                    Hololens2LogItem&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object pcpd_msgs::rpc::Hololens2LogItem that will be copied.
             */
            eProsima_user_DllExport Hololens2LogItem& operator =(
                    const Hololens2LogItem& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object pcpd_msgs::rpc::Hololens2LogItem that will be copied.
             */
            eProsima_user_DllExport Hololens2LogItem& operator =(
                    Hololens2LogItem&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::Hololens2LogItem object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const Hololens2LogItem& x) const;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::Hololens2LogItem object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const Hololens2LogItem& x) const;

            /*!
             * @brief This function copies the value in member timestamp
             * @param _timestamp New value to be copied in member timestamp
             */
            eProsima_user_DllExport void timestamp(
                    const builtin_interfaces::msg::Time& _timestamp);

            /*!
             * @brief This function moves the value in member timestamp
             * @param _timestamp New value to be moved in member timestamp
             */
            eProsima_user_DllExport void timestamp(
                    builtin_interfaces::msg::Time&& _timestamp);

            /*!
             * @brief This function returns a constant reference to member timestamp
             * @return Constant reference to member timestamp
             */
            eProsima_user_DllExport const builtin_interfaces::msg::Time& timestamp() const;

            /*!
             * @brief This function returns a reference to member timestamp
             * @return Reference to member timestamp
             */
            eProsima_user_DllExport builtin_interfaces::msg::Time& timestamp();
            /*!
             * @brief This function sets a value in member severity
             * @param _severity New value for member severity
             */
            eProsima_user_DllExport void severity(
                    pcpd_msgs::rpc::Hololens2LogLevel _severity);

            /*!
             * @brief This function returns the value of member severity
             * @return Value of member severity
             */
            eProsima_user_DllExport pcpd_msgs::rpc::Hololens2LogLevel severity() const;

            /*!
             * @brief This function returns a reference to member severity
             * @return Reference to member severity
             */
            eProsima_user_DllExport pcpd_msgs::rpc::Hololens2LogLevel& severity();

            /*!
             * @brief This function copies the value in member message
             * @param _message New value to be copied in member message
             */
            eProsima_user_DllExport void message(
                    const std::string& _message);

            /*!
             * @brief This function moves the value in member message
             * @param _message New value to be moved in member message
             */
            eProsima_user_DllExport void message(
                    std::string&& _message);

            /*!
             * @brief This function returns a constant reference to member message
             * @return Constant reference to member message
             */
            eProsima_user_DllExport const std::string& message() const;

            /*!
             * @brief This function returns a reference to member message
             * @return Reference to member message
             */
            eProsima_user_DllExport std::string& message();

            /*!
            * @brief This function returns the maximum serialized size of an object
            * depending on the buffer alignment.
            * @param current_alignment Buffer alignment.
            * @return Maximum serialized size.
            */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(
                    const pcpd_msgs::rpc::Hololens2LogItem& data,
                    size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(
                    eprosima::fastcdr::Cdr& cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(
                    eprosima::fastcdr::Cdr& cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(
                    eprosima::fastcdr::Cdr& cdr) const;

        private:

            builtin_interfaces::msg::Time m_timestamp;
            pcpd_msgs::rpc::Hololens2LogLevel m_severity;
            std::string m_message;

        };
        /*!
         * @brief This class represents the structure Hololens2LogMessage defined by the user in the IDL file.
         * @ingroup HOLOLENS2MANAGER
         */
        class Hololens2LogMessage
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport Hololens2LogMessage();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~Hololens2LogMessage();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object pcpd_msgs::rpc::Hololens2LogMessage that will be copied.
             */
            eProsima_user_DllExport Hololens2LogMessage(
                    const Hololens2LogMessage& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object pcpd_msgs::rpc::Hololens2LogMessage that will be copied.
             */
            eProsima_user_DllExport Hololens2LogMessage(
                    Hololens2LogMessage&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object pcpd_msgs::rpc::Hololens2LogMessage that will be copied.
             */
            eProsima_user_DllExport Hololens2LogMessage& operator =(
                    const Hololens2LogMessage& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object pcpd_msgs::rpc::Hololens2LogMessage that will be copied.
             */
            eProsima_user_DllExport Hololens2LogMessage& operator =(
                    Hololens2LogMessage&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::Hololens2LogMessage object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const Hololens2LogMessage& x) const;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::Hololens2LogMessage object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const Hololens2LogMessage& x) const;

            /*!
             * @brief This function copies the value in member header
             * @param _header New value to be copied in member header
             */
            eProsima_user_DllExport void header(
                    const std_msgs::msg::Header& _header);

            /*!
             * @brief This function moves the value in member header
             * @param _header New value to be moved in member header
             */
            eProsima_user_DllExport void header(
                    std_msgs::msg::Header&& _header);

            /*!
             * @brief This function returns a constant reference to member header
             * @return Constant reference to member header
             */
            eProsima_user_DllExport const std_msgs::msg::Header& header() const;

            /*!
             * @brief This function returns a reference to member header
             * @return Reference to member header
             */
            eProsima_user_DllExport std_msgs::msg::Header& header();
            /*!
             * @brief This function copies the value in member items
             * @param _items New value to be copied in member items
             */
            eProsima_user_DllExport void items(
                    const std::vector<pcpd_msgs::rpc::Hololens2LogItem>& _items);

            /*!
             * @brief This function moves the value in member items
             * @param _items New value to be moved in member items
             */
            eProsima_user_DllExport void items(
                    std::vector<pcpd_msgs::rpc::Hololens2LogItem>&& _items);

            /*!
             * @brief This function returns a constant reference to member items
             * @return Constant reference to member items
             */
            eProsima_user_DllExport const std::vector<pcpd_msgs::rpc::Hololens2LogItem>& items() const;

            /*!
             * @brief This function returns a reference to member items
             * @return Reference to member items
             */
            eProsima_user_DllExport std::vector<pcpd_msgs::rpc::Hololens2LogItem>& items();

            /*!
            * @brief This function returns the maximum serialized size of an object
            * depending on the buffer alignment.
            * @param current_alignment Buffer alignment.
            * @return Maximum serialized size.
            */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(
                    const pcpd_msgs::rpc::Hololens2LogMessage& data,
                    size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(
                    eprosima::fastcdr::Cdr& cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(
                    eprosima::fastcdr::Cdr& cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(
                    eprosima::fastcdr::Cdr& cdr) const;

        private:

            std_msgs::msg::Header m_header;
            std::vector<pcpd_msgs::rpc::Hololens2LogItem> m_items;

        };
        /*!
         * @brief This class represents the structure Hololens2Presence defined by the user in the IDL file.
         * @ingroup HOLOLENS2MANAGER
         */
        class Hololens2Presence
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport Hololens2Presence();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~Hololens2Presence();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object pcpd_msgs::rpc::Hololens2Presence that will be copied.
             */
            eProsima_user_DllExport Hololens2Presence(
                    const Hololens2Presence& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object pcpd_msgs::rpc::Hololens2Presence that will be copied.
             */
            eProsima_user_DllExport Hololens2Presence(
                    Hololens2Presence&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object pcpd_msgs::rpc::Hololens2Presence that will be copied.
             */
            eProsima_user_DllExport Hololens2Presence& operator =(
                    const Hololens2Presence& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object pcpd_msgs::rpc::Hololens2Presence that will be copied.
             */
            eProsima_user_DllExport Hololens2Presence& operator =(
                    Hololens2Presence&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::Hololens2Presence object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const Hololens2Presence& x) const;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::Hololens2Presence object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const Hololens2Presence& x) const;

            /*!
             * @brief This function copies the value in member header
             * @param _header New value to be copied in member header
             */
            eProsima_user_DllExport void header(
                    const std_msgs::msg::Header& _header);

            /*!
             * @brief This function moves the value in member header
             * @param _header New value to be moved in member header
             */
            eProsima_user_DllExport void header(
                    std_msgs::msg::Header&& _header);

            /*!
             * @brief This function returns a constant reference to member header
             * @return Constant reference to member header
             */
            eProsima_user_DllExport const std_msgs::msg::Header& header() const;

            /*!
             * @brief This function returns a reference to member header
             * @return Reference to member header
             */
            eProsima_user_DllExport std_msgs::msg::Header& header();
            /*!
             * @brief This function sets a value in member heart_beat_counter
             * @param _heart_beat_counter New value for member heart_beat_counter
             */
            eProsima_user_DllExport void heart_beat_counter(
                    uint64_t _heart_beat_counter);

            /*!
             * @brief This function returns the value of member heart_beat_counter
             * @return Value of member heart_beat_counter
             */
            eProsima_user_DllExport uint64_t heart_beat_counter() const;

            /*!
             * @brief This function returns a reference to member heart_beat_counter
             * @return Reference to member heart_beat_counter
             */
            eProsima_user_DllExport uint64_t& heart_beat_counter();


            /*!
            * @brief This function returns the maximum serialized size of an object
            * depending on the buffer alignment.
            * @param current_alignment Buffer alignment.
            * @return Maximum serialized size.
            */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(
                    const pcpd_msgs::rpc::Hololens2Presence& data,
                    size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(
                    eprosima::fastcdr::Cdr& cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(
                    eprosima::fastcdr::Cdr& cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(
                    eprosima::fastcdr::Cdr& cdr) const;

        private:

            std_msgs::msg::Header m_header;
            uint64_t m_heart_beat_counter;

        };
        /*!
         * @brief This class represents the structure HL2MGR_H26xFormat defined by the user in the IDL file.
         * @ingroup HOLOLENS2MANAGER
         */
        class HL2MGR_H26xFormat
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport HL2MGR_H26xFormat();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~HL2MGR_H26xFormat();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGR_H26xFormat that will be copied.
             */
            eProsima_user_DllExport HL2MGR_H26xFormat(
                    const HL2MGR_H26xFormat& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGR_H26xFormat that will be copied.
             */
            eProsima_user_DllExport HL2MGR_H26xFormat(
                    HL2MGR_H26xFormat&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGR_H26xFormat that will be copied.
             */
            eProsima_user_DllExport HL2MGR_H26xFormat& operator =(
                    const HL2MGR_H26xFormat& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGR_H26xFormat that will be copied.
             */
            eProsima_user_DllExport HL2MGR_H26xFormat& operator =(
                    HL2MGR_H26xFormat&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::HL2MGR_H26xFormat object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const HL2MGR_H26xFormat& x) const;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::HL2MGR_H26xFormat object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const HL2MGR_H26xFormat& x) const;

            /*!
             * @brief This function sets a value in member width
             * @param _width New value for member width
             */
            eProsima_user_DllExport void width(
                    uint16_t _width);

            /*!
             * @brief This function returns the value of member width
             * @return Value of member width
             */
            eProsima_user_DllExport uint16_t width() const;

            /*!
             * @brief This function returns a reference to member width
             * @return Reference to member width
             */
            eProsima_user_DllExport uint16_t& width();

            /*!
             * @brief This function sets a value in member height
             * @param _height New value for member height
             */
            eProsima_user_DllExport void height(
                    uint16_t _height);

            /*!
             * @brief This function returns the value of member height
             * @return Value of member height
             */
            eProsima_user_DllExport uint16_t height() const;

            /*!
             * @brief This function returns a reference to member height
             * @return Reference to member height
             */
            eProsima_user_DllExport uint16_t& height();

            /*!
             * @brief This function sets a value in member frame_rate
             * @param _frame_rate New value for member frame_rate
             */
            eProsima_user_DllExport void frame_rate(
                    uint8_t _frame_rate);

            /*!
             * @brief This function returns the value of member frame_rate
             * @return Value of member frame_rate
             */
            eProsima_user_DllExport uint8_t frame_rate() const;

            /*!
             * @brief This function returns a reference to member frame_rate
             * @return Reference to member frame_rate
             */
            eProsima_user_DllExport uint8_t& frame_rate();

            /*!
             * @brief This function sets a value in member profile
             * @param _profile New value for member profile
             */
            eProsima_user_DllExport void profile(
                    pcpd_msgs::msg::Hololens2H26xProfile _profile);

            /*!
             * @brief This function returns the value of member profile
             * @return Value of member profile
             */
            eProsima_user_DllExport pcpd_msgs::msg::Hololens2H26xProfile profile() const;

            /*!
             * @brief This function returns a reference to member profile
             * @return Reference to member profile
             */
            eProsima_user_DllExport pcpd_msgs::msg::Hololens2H26xProfile& profile();

            /*!
             * @brief This function sets a value in member bitrate
             * @param _bitrate New value for member bitrate
             */
            eProsima_user_DllExport void bitrate(
                    uint32_t _bitrate);

            /*!
             * @brief This function returns the value of member bitrate
             * @return Value of member bitrate
             */
            eProsima_user_DllExport uint32_t bitrate() const;

            /*!
             * @brief This function returns a reference to member bitrate
             * @return Reference to member bitrate
             */
            eProsima_user_DllExport uint32_t& bitrate();


            /*!
            * @brief This function returns the maximum serialized size of an object
            * depending on the buffer alignment.
            * @param current_alignment Buffer alignment.
            * @return Maximum serialized size.
            */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(
                    const pcpd_msgs::rpc::HL2MGR_H26xFormat& data,
                    size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(
                    eprosima::fastcdr::Cdr& cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(
                    eprosima::fastcdr::Cdr& cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(
                    eprosima::fastcdr::Cdr& cdr) const;

        private:

            uint16_t m_width;
            uint16_t m_height;
            uint8_t m_frame_rate;
            pcpd_msgs::msg::Hololens2H26xProfile m_profile;
            uint32_t m_bitrate;

        };
        /*!
         * @brief This class represents the structure HL2MGR_AACFormat defined by the user in the IDL file.
         * @ingroup HOLOLENS2MANAGER
         */
        class HL2MGR_AACFormat
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport HL2MGR_AACFormat();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~HL2MGR_AACFormat();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGR_AACFormat that will be copied.
             */
            eProsima_user_DllExport HL2MGR_AACFormat(
                    const HL2MGR_AACFormat& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGR_AACFormat that will be copied.
             */
            eProsima_user_DllExport HL2MGR_AACFormat(
                    HL2MGR_AACFormat&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGR_AACFormat that will be copied.
             */
            eProsima_user_DllExport HL2MGR_AACFormat& operator =(
                    const HL2MGR_AACFormat& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGR_AACFormat that will be copied.
             */
            eProsima_user_DllExport HL2MGR_AACFormat& operator =(
                    HL2MGR_AACFormat&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::HL2MGR_AACFormat object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const HL2MGR_AACFormat& x) const;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::HL2MGR_AACFormat object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const HL2MGR_AACFormat& x) const;

            /*!
             * @brief This function sets a value in member channels
             * @param _channels New value for member channels
             */
            eProsima_user_DllExport void channels(
                    uint32_t _channels);

            /*!
             * @brief This function returns the value of member channels
             * @return Value of member channels
             */
            eProsima_user_DllExport uint32_t channels() const;

            /*!
             * @brief This function returns a reference to member channels
             * @return Reference to member channels
             */
            eProsima_user_DllExport uint32_t& channels();

            /*!
             * @brief This function sets a value in member sample_rate
             * @param _sample_rate New value for member sample_rate
             */
            eProsima_user_DllExport void sample_rate(
                    uint32_t _sample_rate);

            /*!
             * @brief This function returns the value of member sample_rate
             * @return Value of member sample_rate
             */
            eProsima_user_DllExport uint32_t sample_rate() const;

            /*!
             * @brief This function returns a reference to member sample_rate
             * @return Reference to member sample_rate
             */
            eProsima_user_DllExport uint32_t& sample_rate();

            /*!
             * @brief This function sets a value in member profile
             * @param _profile New value for member profile
             */
            eProsima_user_DllExport void profile(
                    pcpd_msgs::msg::Hololens2AACProfile _profile);

            /*!
             * @brief This function returns the value of member profile
             * @return Value of member profile
             */
            eProsima_user_DllExport pcpd_msgs::msg::Hololens2AACProfile profile() const;

            /*!
             * @brief This function returns a reference to member profile
             * @return Reference to member profile
             */
            eProsima_user_DllExport pcpd_msgs::msg::Hololens2AACProfile& profile();


            /*!
            * @brief This function returns the maximum serialized size of an object
            * depending on the buffer alignment.
            * @param current_alignment Buffer alignment.
            * @return Maximum serialized size.
            */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(
                    const pcpd_msgs::rpc::HL2MGR_AACFormat& data,
                    size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(
                    eprosima::fastcdr::Cdr& cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(
                    eprosima::fastcdr::Cdr& cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(
                    eprosima::fastcdr::Cdr& cdr) const;

        private:

            uint32_t m_channels;
            uint32_t m_sample_rate;
            pcpd_msgs::msg::Hololens2AACProfile m_profile;

        };
        /*!
         * @brief This class represents the structure HL2MGRRequest_StartRM defined by the user in the IDL file.
         * @ingroup HOLOLENS2MANAGER
         */
        class HL2MGRRequest_StartRM
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport HL2MGRRequest_StartRM();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~HL2MGRRequest_StartRM();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGRRequest_StartRM that will be copied.
             */
            eProsima_user_DllExport HL2MGRRequest_StartRM(
                    const HL2MGRRequest_StartRM& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGRRequest_StartRM that will be copied.
             */
            eProsima_user_DllExport HL2MGRRequest_StartRM(
                    HL2MGRRequest_StartRM&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGRRequest_StartRM that will be copied.
             */
            eProsima_user_DllExport HL2MGRRequest_StartRM& operator =(
                    const HL2MGRRequest_StartRM& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGRRequest_StartRM that will be copied.
             */
            eProsima_user_DllExport HL2MGRRequest_StartRM& operator =(
                    HL2MGRRequest_StartRM&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::HL2MGRRequest_StartRM object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const HL2MGRRequest_StartRM& x) const;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::HL2MGRRequest_StartRM object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const HL2MGRRequest_StartRM& x) const;

            /*!
             * @brief This function sets a value in member enable_location
             * @param _enable_location New value for member enable_location
             */
            eProsima_user_DllExport void enable_location(
                    bool _enable_location);

            /*!
             * @brief This function returns the value of member enable_location
             * @return Value of member enable_location
             */
            eProsima_user_DllExport bool enable_location() const;

            /*!
             * @brief This function returns a reference to member enable_location
             * @return Reference to member enable_location
             */
            eProsima_user_DllExport bool& enable_location();

            /*!
             * @brief This function sets a value in member enable_left_front
             * @param _enable_left_front New value for member enable_left_front
             */
            eProsima_user_DllExport void enable_left_front(
                    bool _enable_left_front);

            /*!
             * @brief This function returns the value of member enable_left_front
             * @return Value of member enable_left_front
             */
            eProsima_user_DllExport bool enable_left_front() const;

            /*!
             * @brief This function returns a reference to member enable_left_front
             * @return Reference to member enable_left_front
             */
            eProsima_user_DllExport bool& enable_left_front();

            /*!
             * @brief This function sets a value in member enable_left_left
             * @param _enable_left_left New value for member enable_left_left
             */
            eProsima_user_DllExport void enable_left_left(
                    bool _enable_left_left);

            /*!
             * @brief This function returns the value of member enable_left_left
             * @return Value of member enable_left_left
             */
            eProsima_user_DllExport bool enable_left_left() const;

            /*!
             * @brief This function returns a reference to member enable_left_left
             * @return Reference to member enable_left_left
             */
            eProsima_user_DllExport bool& enable_left_left();

            /*!
             * @brief This function sets a value in member enable_right_front
             * @param _enable_right_front New value for member enable_right_front
             */
            eProsima_user_DllExport void enable_right_front(
                    bool _enable_right_front);

            /*!
             * @brief This function returns the value of member enable_right_front
             * @return Value of member enable_right_front
             */
            eProsima_user_DllExport bool enable_right_front() const;

            /*!
             * @brief This function returns a reference to member enable_right_front
             * @return Reference to member enable_right_front
             */
            eProsima_user_DllExport bool& enable_right_front();

            /*!
             * @brief This function sets a value in member enable_right_right
             * @param _enable_right_right New value for member enable_right_right
             */
            eProsima_user_DllExport void enable_right_right(
                    bool _enable_right_right);

            /*!
             * @brief This function returns the value of member enable_right_right
             * @return Value of member enable_right_right
             */
            eProsima_user_DllExport bool enable_right_right() const;

            /*!
             * @brief This function returns a reference to member enable_right_right
             * @return Reference to member enable_right_right
             */
            eProsima_user_DllExport bool& enable_right_right();

            /*!
             * @brief This function copies the value in member vlc_format
             * @param _vlc_format New value to be copied in member vlc_format
             */
            eProsima_user_DllExport void vlc_format(
                    const pcpd_msgs::rpc::HL2MGR_H26xFormat& _vlc_format);

            /*!
             * @brief This function moves the value in member vlc_format
             * @param _vlc_format New value to be moved in member vlc_format
             */
            eProsima_user_DllExport void vlc_format(
                    pcpd_msgs::rpc::HL2MGR_H26xFormat&& _vlc_format);

            /*!
             * @brief This function returns a constant reference to member vlc_format
             * @return Constant reference to member vlc_format
             */
            eProsima_user_DllExport const pcpd_msgs::rpc::HL2MGR_H26xFormat& vlc_format() const;

            /*!
             * @brief This function returns a reference to member vlc_format
             * @return Reference to member vlc_format
             */
            eProsima_user_DllExport pcpd_msgs::rpc::HL2MGR_H26xFormat& vlc_format();
            /*!
             * @brief This function sets a value in member enable_depth_ahat
             * @param _enable_depth_ahat New value for member enable_depth_ahat
             */
            eProsima_user_DllExport void enable_depth_ahat(
                    bool _enable_depth_ahat);

            /*!
             * @brief This function returns the value of member enable_depth_ahat
             * @return Value of member enable_depth_ahat
             */
            eProsima_user_DllExport bool enable_depth_ahat() const;

            /*!
             * @brief This function returns a reference to member enable_depth_ahat
             * @return Reference to member enable_depth_ahat
             */
            eProsima_user_DllExport bool& enable_depth_ahat();

            /*!
             * @brief This function sets a value in member enable_depth_long_throw
             * @param _enable_depth_long_throw New value for member enable_depth_long_throw
             */
            eProsima_user_DllExport void enable_depth_long_throw(
                    bool _enable_depth_long_throw);

            /*!
             * @brief This function returns the value of member enable_depth_long_throw
             * @return Value of member enable_depth_long_throw
             */
            eProsima_user_DllExport bool enable_depth_long_throw() const;

            /*!
             * @brief This function returns a reference to member enable_depth_long_throw
             * @return Reference to member enable_depth_long_throw
             */
            eProsima_user_DllExport bool& enable_depth_long_throw();

            /*!
             * @brief This function copies the value in member depth_format
             * @param _depth_format New value to be copied in member depth_format
             */
            eProsima_user_DllExport void depth_format(
                    const pcpd_msgs::rpc::HL2MGR_H26xFormat& _depth_format);

            /*!
             * @brief This function moves the value in member depth_format
             * @param _depth_format New value to be moved in member depth_format
             */
            eProsima_user_DllExport void depth_format(
                    pcpd_msgs::rpc::HL2MGR_H26xFormat&& _depth_format);

            /*!
             * @brief This function returns a constant reference to member depth_format
             * @return Constant reference to member depth_format
             */
            eProsima_user_DllExport const pcpd_msgs::rpc::HL2MGR_H26xFormat& depth_format() const;

            /*!
             * @brief This function returns a reference to member depth_format
             * @return Reference to member depth_format
             */
            eProsima_user_DllExport pcpd_msgs::rpc::HL2MGR_H26xFormat& depth_format();
            /*!
             * @brief This function sets a value in member enable_imu_accel
             * @param _enable_imu_accel New value for member enable_imu_accel
             */
            eProsima_user_DllExport void enable_imu_accel(
                    bool _enable_imu_accel);

            /*!
             * @brief This function returns the value of member enable_imu_accel
             * @return Value of member enable_imu_accel
             */
            eProsima_user_DllExport bool enable_imu_accel() const;

            /*!
             * @brief This function returns a reference to member enable_imu_accel
             * @return Reference to member enable_imu_accel
             */
            eProsima_user_DllExport bool& enable_imu_accel();

            /*!
             * @brief This function sets a value in member enable_imu_gyro
             * @param _enable_imu_gyro New value for member enable_imu_gyro
             */
            eProsima_user_DllExport void enable_imu_gyro(
                    bool _enable_imu_gyro);

            /*!
             * @brief This function returns the value of member enable_imu_gyro
             * @return Value of member enable_imu_gyro
             */
            eProsima_user_DllExport bool enable_imu_gyro() const;

            /*!
             * @brief This function returns a reference to member enable_imu_gyro
             * @return Reference to member enable_imu_gyro
             */
            eProsima_user_DllExport bool& enable_imu_gyro();

            /*!
             * @brief This function sets a value in member enable_imu_mag
             * @param _enable_imu_mag New value for member enable_imu_mag
             */
            eProsima_user_DllExport void enable_imu_mag(
                    bool _enable_imu_mag);

            /*!
             * @brief This function returns the value of member enable_imu_mag
             * @return Value of member enable_imu_mag
             */
            eProsima_user_DllExport bool enable_imu_mag() const;

            /*!
             * @brief This function returns a reference to member enable_imu_mag
             * @return Reference to member enable_imu_mag
             */
            eProsima_user_DllExport bool& enable_imu_mag();


            /*!
            * @brief This function returns the maximum serialized size of an object
            * depending on the buffer alignment.
            * @param current_alignment Buffer alignment.
            * @return Maximum serialized size.
            */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(
                    const pcpd_msgs::rpc::HL2MGRRequest_StartRM& data,
                    size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(
                    eprosima::fastcdr::Cdr& cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(
                    eprosima::fastcdr::Cdr& cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(
                    eprosima::fastcdr::Cdr& cdr) const;

        private:

            bool m_enable_location;
            bool m_enable_left_front;
            bool m_enable_left_left;
            bool m_enable_right_front;
            bool m_enable_right_right;
            pcpd_msgs::rpc::HL2MGR_H26xFormat m_vlc_format;
            bool m_enable_depth_ahat;
            bool m_enable_depth_long_throw;
            pcpd_msgs::rpc::HL2MGR_H26xFormat m_depth_format;
            bool m_enable_imu_accel;
            bool m_enable_imu_gyro;
            bool m_enable_imu_mag;

        };
        /*!
         * @brief This class represents the structure HL2MGRRequest_StartPV defined by the user in the IDL file.
         * @ingroup HOLOLENS2MANAGER
         */
        class HL2MGRRequest_StartPV
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport HL2MGRRequest_StartPV();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~HL2MGRRequest_StartPV();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGRRequest_StartPV that will be copied.
             */
            eProsima_user_DllExport HL2MGRRequest_StartPV(
                    const HL2MGRRequest_StartPV& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGRRequest_StartPV that will be copied.
             */
            eProsima_user_DllExport HL2MGRRequest_StartPV(
                    HL2MGRRequest_StartPV&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGRRequest_StartPV that will be copied.
             */
            eProsima_user_DllExport HL2MGRRequest_StartPV& operator =(
                    const HL2MGRRequest_StartPV& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGRRequest_StartPV that will be copied.
             */
            eProsima_user_DllExport HL2MGRRequest_StartPV& operator =(
                    HL2MGRRequest_StartPV&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::HL2MGRRequest_StartPV object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const HL2MGRRequest_StartPV& x) const;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::HL2MGRRequest_StartPV object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const HL2MGRRequest_StartPV& x) const;

            /*!
             * @brief This function sets a value in member enable_location
             * @param _enable_location New value for member enable_location
             */
            eProsima_user_DllExport void enable_location(
                    bool _enable_location);

            /*!
             * @brief This function returns the value of member enable_location
             * @return Value of member enable_location
             */
            eProsima_user_DllExport bool enable_location() const;

            /*!
             * @brief This function returns a reference to member enable_location
             * @return Reference to member enable_location
             */
            eProsima_user_DllExport bool& enable_location();

            /*!
             * @brief This function copies the value in member pv_format
             * @param _pv_format New value to be copied in member pv_format
             */
            eProsima_user_DllExport void pv_format(
                    const pcpd_msgs::rpc::HL2MGR_H26xFormat& _pv_format);

            /*!
             * @brief This function moves the value in member pv_format
             * @param _pv_format New value to be moved in member pv_format
             */
            eProsima_user_DllExport void pv_format(
                    pcpd_msgs::rpc::HL2MGR_H26xFormat&& _pv_format);

            /*!
             * @brief This function returns a constant reference to member pv_format
             * @return Constant reference to member pv_format
             */
            eProsima_user_DllExport const pcpd_msgs::rpc::HL2MGR_H26xFormat& pv_format() const;

            /*!
             * @brief This function returns a reference to member pv_format
             * @return Reference to member pv_format
             */
            eProsima_user_DllExport pcpd_msgs::rpc::HL2MGR_H26xFormat& pv_format();

            /*!
            * @brief This function returns the maximum serialized size of an object
            * depending on the buffer alignment.
            * @param current_alignment Buffer alignment.
            * @return Maximum serialized size.
            */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(
                    const pcpd_msgs::rpc::HL2MGRRequest_StartPV& data,
                    size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(
                    eprosima::fastcdr::Cdr& cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(
                    eprosima::fastcdr::Cdr& cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(
                    eprosima::fastcdr::Cdr& cdr) const;

        private:

            bool m_enable_location;
            pcpd_msgs::rpc::HL2MGR_H26xFormat m_pv_format;

        };
        /*!
         * @brief This class represents the structure HL2MGRRequest_StartMC defined by the user in the IDL file.
         * @ingroup HOLOLENS2MANAGER
         */
        class HL2MGRRequest_StartMC
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport HL2MGRRequest_StartMC();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~HL2MGRRequest_StartMC();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGRRequest_StartMC that will be copied.
             */
            eProsima_user_DllExport HL2MGRRequest_StartMC(
                    const HL2MGRRequest_StartMC& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGRRequest_StartMC that will be copied.
             */
            eProsima_user_DllExport HL2MGRRequest_StartMC(
                    HL2MGRRequest_StartMC&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGRRequest_StartMC that will be copied.
             */
            eProsima_user_DllExport HL2MGRRequest_StartMC& operator =(
                    const HL2MGRRequest_StartMC& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object pcpd_msgs::rpc::HL2MGRRequest_StartMC that will be copied.
             */
            eProsima_user_DllExport HL2MGRRequest_StartMC& operator =(
                    HL2MGRRequest_StartMC&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::HL2MGRRequest_StartMC object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const HL2MGRRequest_StartMC& x) const;

            /*!
             * @brief Comparison operator.
             * @param x pcpd_msgs::rpc::HL2MGRRequest_StartMC object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const HL2MGRRequest_StartMC& x) const;

            /*!
             * @brief This function copies the value in member aac_format
             * @param _aac_format New value to be copied in member aac_format
             */
            eProsima_user_DllExport void aac_format(
                    const pcpd_msgs::rpc::HL2MGR_AACFormat& _aac_format);

            /*!
             * @brief This function moves the value in member aac_format
             * @param _aac_format New value to be moved in member aac_format
             */
            eProsima_user_DllExport void aac_format(
                    pcpd_msgs::rpc::HL2MGR_AACFormat&& _aac_format);

            /*!
             * @brief This function returns a constant reference to member aac_format
             * @return Constant reference to member aac_format
             */
            eProsima_user_DllExport const pcpd_msgs::rpc::HL2MGR_AACFormat& aac_format() const;

            /*!
             * @brief This function returns a reference to member aac_format
             * @return Reference to member aac_format
             */
            eProsima_user_DllExport pcpd_msgs::rpc::HL2MGR_AACFormat& aac_format();

            /*!
            * @brief This function returns the maximum serialized size of an object
            * depending on the buffer alignment.
            * @param current_alignment Buffer alignment.
            * @return Maximum serialized size.
            */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(
                    const pcpd_msgs::rpc::HL2MGRRequest_StartMC& data,
                    size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(
                    eprosima::fastcdr::Cdr& cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(
                    eprosima::fastcdr::Cdr& cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(
                    eprosima::fastcdr::Cdr& cdr) const;

        private:

            pcpd_msgs::rpc::HL2MGR_AACFormat m_aac_format;

        };
    } // namespace rpc
} // namespace pcpd_msgs

#endif // _FAST_DDS_GENERATED_PCPD_MSGS_RPC_HOLOLENS2MANAGER_H_